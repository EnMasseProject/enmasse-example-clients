{
    "swagger": "2.0",
    "info": {
        "description": "This is the EnMasse API specification.",
        "version": "1.0.0",
        "title": "EnMasse REST API"

    },
	"securityDefinitions": {
	   "BearerToken": {
		"description": "Bearer Token authentication",
		"type": "oauth2",
		"name": "Authorization",
		"in": "header",
        "flow": "implicit"
	   }
	  },
	  "security": [
	   {
		"BearerToken": []
	   }
	  ],
    "tags": [
        {
            "name": "addressspaces",
            "description": "Operate on AddressSpaces",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            }
        },
        {
            "name": "addresses",
            "description": "Operating on Addresses.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            }
        },
        {
            "name": "messagingusers",
            "description": "Operating on MessagingUsers.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            }
        },
        {
            "name": "addressspaceplans",
            "description": "Operating on AddressSpacePlans.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            }
        },
        {
            "name": "addressplans",
            "description": "Operating on AddressPlans.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            }
        },
        {
            "name": "brokeredinfraconfigs",
            "description": "Operating on BrokeredInfraConfigs.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            }
        },
        {
            "name": "standardinfraconfigs",
            "description": "Operating on StandardInfraConfigs.",
            "externalDocs": {
                "description": "Find out more",
                "url": "https://enmasse.io"
            }
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addressspaces": {
          "get": {
            "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ],
                "description": "list objects of kind AddressSpace",
                "operationId": "listEnmasseV1alpha1NamespacedAddressSpace",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "name": "labelSelector",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpaceList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ],
                "description": "create an AddressSpace",
                "operationId": "createEnmasseV1alpha1NamespacedAddressSpace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "parameters": [
                {
                    "name": "namespace",
                    "in": "path",
                    "description": "object name and auth scope, such as for teams and projects",
                    "required": true,
                    "uniqueItems": true,
                    "type": "string"
                }
            ]
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addressspaces/{name}": {
            "get": {
                "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ],
                "description": "read the specified AddressSpace",
                "operationId": "readEnmasseV1alpha1NamespacedAddressSpace",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of AddressSpace to read",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ],
                "description": "replace the specified AddressSpace",
                "operationId": "replaceEnmasseV1alpha1NamespacedAddressSpace",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of AddressSpace to replace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "enmasse_v1beta1",
                    "addressspaces"
                ],
                "description": "delete an AddressSpace",
                "operationId": "deleteEnmasseV1alpha1NamespacedAddressSpace",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of AddressSpace to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "namespace",
                    "in": "path",
                    "description": "object name and auth scope, such as for teams and projects",
                    "required": true,
                    "uniqueItems": true,
                    "type": "string"
                }
            ]
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addressspaces/{addressSpace}/addresses": {
            "get": {
                "tags": [
                    "enmasse_v1beta1",
                    "addressspace_addresses"
                ],
                "description": "list objects of kind Address in AddressSpace",
                "operationId": "listEnmasseV1alpha1NamespacedAddressSpaceAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "addressSpace",
                        "in": "path",
                        "description": "Name of AddressSpace",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "post": {
                "tags": [
                    "enmasse_v1beta1",
                    "addressspace_addresses"
                ],
                "description": "create Addresses in an AddressSpace",
                "operationId": "createEnmasseV1alpha1AddressSpaceAddresses",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "addressSpace",
                        "in": "path",
                        "description": "Name of AddressSpace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "AddressList object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "namespace",
                    "in": "path",
                    "description": "object name and auth scope, such as for teams and projects",
                    "required": true,
                    "uniqueItems": true,
                    "type": "string"
                }
            ]
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addressspaces/{addressSpace}/addresses/{address}": {
            "put": {
                "tags": [
                    "enmasse_v1beta1",
                    "addressspace_addresses"
                ],
                "description": "replace Address in an AddressSpace",
                "operationId": "replaceEnmasseV1alpha1NamespacedAddressSpaceAddress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "addressSpace",
                        "in": "path",
                        "description": "Name of AddressSpace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Name of address",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Address object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "get": {
                "tags": [
                    "enmasse_v1beta1",
                    "addressspace_addresses"
                ],
                "description": "read the specified Address in AddressSpace",
                "operationId": "readEnmasseV1alpha1NamespacedAddressSpaceAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "addressSpace",
                        "in": "path",
                        "description": "Name of AddressSpace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Name of Address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "enmasse_v1beta1",
                    "addressspace_addresses"
                ],
                "description": "delete an Address in AddressSpace",
                "operationId": "deleteEnmasseV1alpha1NamespacedAddressSpaceAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "addressSpace",
                        "in": "path",
                        "description": "Name of AddressSpace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "address",
                        "in": "path",
                        "description": "Name of Address",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "namespace",
                    "in": "path",
                    "description": "object name and auth scope, such as for teams and projects",
                    "required": true,
                    "uniqueItems": true,
                    "type": "string"
                }
            ]
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addresses": {
          "get": {
            "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ],
                "description": "list objects of kind Address",
                "operationId": "listEnmasseV1alpha1NamespacedAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "name": "labelSelector",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.AddressList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ],
                "description": "create an Address",
                "operationId": "createEnmasseV1alpha1NamespacedAddress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "parameters": [
                {
                    "name": "namespace",
                    "in": "path",
                    "description": "object name and auth scope, such as for teams and projects",
                    "required": true,
                    "uniqueItems": true,
                    "type": "string"
                }
            ]
        },
        "/apis/enmasse.io/v1beta1/namespaces/{namespace}/addresses/{name}": {
            "get": {
                "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ],
                "description": "read the specified Address",
                "operationId": "readEnmasseV1alpha1NamespacedAddress",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of Address to read",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ],
                "description": "replace the specified Address",
                "operationId": "replaceEnmasseV1alpha1NamespacedAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of Address to replace",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "enmasse_v1beta1",
                    "addresses"
                ],
                "description": "delete an Address",
                "operationId": "deleteEnmasseV1alpha1NamespacedAddress",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of Address to delete",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "namespace",
                    "in": "path",
                    "description": "object name and auth scope, such as for teams and projects",
                    "required": true,
                    "uniqueItems": true,
                    "type": "string"
                }
            ]
        },
        "/apis/user.enmasse.io/v1beta1/namespaces/{namespace}/messagingusers": {
          "get": {
            "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ],
                "description": "list objects of kind MessagingUser",
                "operationId": "listAuthEnmasseV1alpha1NamespacedMessagingUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "name": "labelSelector",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUserList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ],
                "description": "create a MessagingUser",
                "operationId": "createAuthEnmasseV1alpha1NamespacedMessagingUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "parameters": [
                {
                    "name": "namespace",
                    "in": "path",
                    "description": "object name and auth scope, such as for teams and projects",
                    "required": true,
                    "uniqueItems": true,
                    "type": "string"
                }
            ]
        },
        "/apis/user.enmasse.io/v1beta1/namespaces/{namespace}/messagingusers/{name}": {
            "get": {
                "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ],
                "description": "read the specified MessagingUser",
                "operationId": "readAuthEnmasseV1alpha1NamespacedMessagingUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of MessagingUser to read. Must include addressSpace and dot separator in the name (that is, 'myspace.user1').",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ],
                "description": "replace the specified MessagingUser",
                "operationId": "replaceAuthEnmasseV1alpha1NamespacedMessagingUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of MessagingUser to replace. Must include addressSpace and dot separator in the name (that is, 'myspace.user1').",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "enmasse_v1beta1",
                    "auth",
                    "user"
                ],
                "description": "delete a MessagingUser",
                "operationId": "deleteAuthEnmasseV1alpha1NamespacedMessagingUser",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of MessagingUser to delete. Must include addressSpace and dot separator in the name (that is, 'myspace.user1').",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "namespace",
                    "in": "path",
                    "description": "object name and auth scope, such as for teams and projects",
                    "required": true,
                    "uniqueItems": true,
                    "type": "string"
                }
            ]
        },
        "/apis/admin.enmasse.io/v1beta1/namespaces/{namespace}/addressspaceplans": {
          "get": {
            "tags": [
                    "enmasse_v1beta1",
                    "admin",
                    "addressspaceplan"
                ],
                "description": "list objects of kind AddressSpacePlan",
                "operationId": "listAdminEnmasseV1alpha1NamespacedAddresSpacePlan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "uniqueItems": true,
                        "type": "string",
                        "description": "A selector to restrict the list of returned objects by their labels. Defaults to everything.",
                        "name": "labelSelector",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta1.AddressSpacePlanList"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "enmasse_v1beta1",
                    "admin",
                    "addressspaceplan"
                ],
                "description": "create an AddressSpacePlan",
                "operationId": "createAdminEnmasseV1alpha1NamespacedAddressSpacePlan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta1.AddressSpacePlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta1.AddressSpacePlan"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta1.AddressSpacePlan"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "parameters": [
                {
                    "name": "namespace",
                    "in": "path",
                    "description": "object name and auth scope, such as for teams and projects",
                    "required": true,
                    "uniqueItems": true,
                    "type": "string"
                }
            ]
        },
        "/apis/admin.enmasse.io/v1beta1/namespaces/{namespace}/addressspaceplans/{name}": {
            "get": {
                "tags": [
                    "enmasse_v1beta1",
                    "admin",
                    "addressspaceplan"
                ],
                "description": "read the specified AddressSpacePlan",
                "operationId": "readAdminEnmasseV1alpha1NamespacedAddressSpacePlan",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of AddressSpacePlan to read.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta1.AddressSpacePlan"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "enmasse_v1beta1",
                    "admin",
                    "addressspaceplan"
                ],
                "description": "replace the specified AddressSpacePlan",
                "operationId": "replaceAdminEnmasseV1alpha1NamespacedAddressSpacePlan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of AddressSpacePlan to replace.",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta1.AddressSpacePlan"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta1.AddressSpacePlan"
                        }
                    },
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/io.enmasse.admin.v1beta1.AddressSpacePlan"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "enmasse_v1beta1",
                    "admin",
                    "addressspaceplan"
                ],
                "description": "delete an AddressSpacePlan",
                "operationId": "deleteAdminEnmasseV1alpha1NamespacedAddressSpacePlan",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "path",
                        "description": "Name of AddressSpacePlan to delete.",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Status"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not found"
                    }
                }
            },
            "parameters": [
                {
                    "name": "namespace",
                    "in": "path",
                    "description": "object name and auth scope, such as for teams and projects",
                    "required": true,
                    "uniqueItems": true,
                    "type": "string"
                }
            ]
        }
    },
    "definitions": {
        "io.enmasse.v1beta1.AddressSpace": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "AddressSpace"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpaceSpec"
                },
                "status": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpaceStatus"
                }
            }
        },
        "io.enmasse.v1beta1.AddressSpaceSpec": {
            "type": "object",
            "required": [
                "type",
                "plan"
            ],
            "properties": {
                "type": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpaceType"
                },
                "plan": {
                    "type": "string"
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "service": {
                                "type": "string"
                            },
                            "cert": {
                                "type": "object",
                                "properties": {
                                    "provider": {
                                        "type": "string"
                                    },
                                    "tlsKey": {
                                        "type": "string"
                                    },
                                    "tlsCert": {
                                        "type": "string"
                                    },
                                    "secretName": {
                                        "type": "string"
                                    }
                                }
                            },
                            "expose": {
                                "type": "object",
                                "properties": {
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "route",
                                            "loadbalancer"
                                        ]
                                    },
                                    "annotations": {
                                        "type": "object"
                                    },
                                    "routeHost": {
                                        "type": "string"
                                    },
                                    "routeTlsTermination": {
                                        "type": "string"
                                    },
                                    "routeServicePort": {
                                        "type": "string"
                                    },
                                    "loadBalancerSourceRanges": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    },
                                    "loadBalancerPorts": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    }
                },
                "authenticationService": {
                    "type": "object",
                    "properties": {
                        "type": {
                            "type": "string"
                        },
                        "details": {
                            "type": "object"
                        }
                    }
                },
                "networkPolicy": {
                    "type": "object",
                    "properties": {
                        "ingress": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
                            }
                        },
                        "egress": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
                            }
                        }
                    }
                }
            }
        },
        "io.enmasse.v1beta1.AddressSpaceStatus": {
            "type": "object",
            "properties": {
                "isReady": {
                    "type": "boolean"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "endpointStatuses": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "serviceHost": {
                                "type": "string"
                            },
                            "servicePorts": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "port": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "externalHost": {
                                "type": "string"
                            },
                            "externalPorts": {
                                "type": "array",
                                "items": {
                                    "type": "object",
                                    "properties": {
                                        "name": {
                                            "type": "string"
                                        },
                                        "port": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            },
                            "cert": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "io.enmasse.v1beta1.AddressSpaceList": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "default": "enmasse.io/v1beta1",
                    "enum": [
                        "enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "AddressSpaceList"
                    ]
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpace"
                    }
                }
            }
        },
        "io.enmasse.v1beta1.Address": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "Address"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressSpec"
                },
                "status": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressStatus"
                }
            }
        },
        "io.enmasse.v1beta1.AddressSpec": {
            "type": "object",
            "required": [
                "address",
                "type",
                "plan"
            ],
            "properties": {
                "type": {
                    "$ref": "#/definitions/io.enmasse.v1beta1.AddressType"
                },
                "plan": {
                    "type": "string"
                },
                "address": {
                    "type": "string"
                }
            }
        },
        "io.enmasse.v1beta1.AddressStatus": {
            "type": "object",
            "properties": {
                "isReady": {
                    "type": "boolean"
                },
                "phase": {
                    "type": "string",
                    "enum": [
                        "Pending",
                        "Configuring",
                        "Active",
                        "Failed",
                        "Terminating"
                    ]
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "io.enmasse.v1beta1.AddressList": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "default": "enmasse.io/v1beta1",
                    "enum": [
                        "enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "AddressList"
                    ]
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.v1beta1.Address"
                    }
                }
            }
        },
        "io.enmasse.user.v1beta1.MessagingUser": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "user.enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "MessagingUser"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.user.v1beta1.UserSpec"
                }
            }
        },
        "io.enmasse.user.v1beta1.UserSpec": {
            "type": "object",
            "required": [
                "username"
            ],
            "properties": {
                "username": {
                    "type": "string"
                },
                "authentication": {
                    "type": "object",
                    "required": [
                        "type"
                    ],
                    "properties": {
                        "type": {
                            "type": "string",
                            "enum": [
                                "password",
                                "federated"
                            ]
                        },
                        "password": {
                            "type": "string",
                            "description": "Base64 encoded value of password when 'password' type is specified."
                        },
                        "provider": {
                            "type": "string",
                            "description": "Name of provider to use for federated identity when 'federated' type is specified."
                        },
                        "federatedUserid": {
                            "type": "string",
                            "description": "User id of the user to federate when 'federated' type is specified."
                        },
                        "federatedUsername": {
                            "type": "string",
                            "description": "User name of the user to federate when 'federated' type is specified."
                        }
                    }
                },
                "authorization": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "operations"
                        ],
                        "properties": {
                            "addresses": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "description": "Addresses can be specified using exact values (that is, 'myqueue'), or glob patterns (that is, '*', or 'queue*')."
                                }
                            },
                            "operations": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "enum": [
                                        "send",
                                        "receive",
                                        "view",
                                        "manage"
                                    ]
                                }
                            }
                        }
                    }
                }
            }
        },
        "io.enmasse.user.v1beta1.MessagingUserList": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "user.enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "MessagingUserList"
                    ]
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.user.v1beta1.MessagingUser"
                    }
                }
            }
        },
        "Status": {
            "description": "Status is a return value for calls that do not return other objects.",
            "properties": {
                "code": {
                    "description": "Suggested HTTP return code for this status, 0 if not set.",
                    "type": "integer",
                    "format": "int32"
                }
            }
        },
        "ObjectMeta": {
    "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
    "properties": {
     "annotations": {
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "labels": {
      "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
      "type": "object",
      "additionalProperties": {
       "type": "string"
      }
     },
     "creationTimestamp": {
      "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.\n\nPopulated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
      "$ref": "string"
     },
     "name": {
      "description": "Name must be unique within a namespace. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
      "type": "string"
     },
     "namespace": {
      "description": "Namespace defines the space within each name must be unique. An empty namespace is equivalent to the \"default\" namespace, but \"default\" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.\n\nMust be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces",
      "type": "string"
     },
     "resourceVersion": {
      "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.\n\nPopulated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency",
      "type": "string"
     },
     "selfLink": {
      "description": "SelfLink is a URL representing this object. Populated by the system. Read-only.",
      "type": "string"
     },
     "uid": {
      "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.\n\nPopulated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
      "type": "string"
     }
    }
   },
        "io.enmasse.v1beta1.AddressSpaceType": {
            "type": "string",
            "description": "AddressSpaceType is the type of address space (standard, brokered). Each type supports different types of addresses and semantics for those types.",
            "enum": [
                "standard",
                "brokered"
            ]
        },
        "io.enmasse.v1beta1.AddressType": {
            "type": "string",
            "description": "Type of address (queue, topic, ...). Each address type support different kinds of messaging semantics.",
            "enum": [
                "queue",
                "topic",
                "anycast",
                "multicast"
            ]
        },
        "io.enmasse.admin.v1beta1.BrokeredInfraConfig": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "BrokeredInfraConfig"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.BrokeredInfraConfigSpec"
                }
            }
        },
        "io.enmasse.admin.v1beta1.BrokeredInfraConfigSpec": {
            "type": "object",
            "required": [
                "version"
            ],
            "properties": {
                "version": {
                    "type": "string"
                },
                "networkPolicy": {
                    "type": "object",
                    "properties": {
                        "ingress": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
                            }
                        },
                        "egress": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
                            }
                        }
                    }
                },
                "admin": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.BrokeredInfraConfigSpecAdmin"
                },
                "broker": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.BrokeredInfraConfigSpecBroker"
                }
            }
        },
        "io.enmasse.admin.v1beta1.BrokeredInfraConfigSpecAdmin": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "object",
                    "properties": {
                        "memory": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "io.enmasse.admin.v1beta1.BrokeredInfraConfigSpecBroker": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "object",
                    "properties": {
                        "memory": {
                            "type": "string"
                        },
                        "storage": {
                            "type": "string"
                        }
                    }
                },
                "addressFullPolicy": {
                    "type": "string",
                    "enum": [
                        "PAGE",
                        "BLOCK",
                        "FAIL"
                    ]
                },
                "storageClassName": {
                    "type": "string"
                },
                "updatePersistentVolumeClaim": {
                    "type": "boolean"
                }
            }
        },
        "io.enmasse.admin.v1beta1.BrokeredInfraConfigList": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "BrokeredInfraConfigList"
                    ]
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.admin.v1beta1.BrokeredInfraConfig"
                    }
                }
            }
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfig": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "spec"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "StandardInfraConfig"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "spec": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.StandardInfraConfigSpec"
                }
            }
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfigSpec": {
            "type": "object",
            "required": [
                "version"
            ],
            "properties": {
                "version": {
                    "type": "string"
                },
                "networkPolicy": {
                    "type": "object",
                    "properties": {
                        "ingress": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyIngressRule"
                            }
                        },
                        "egress": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyEgressRule"
                            }
                        }
                    }
                },
                "admin": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.StandardInfraConfigSpecAdmin"
                },
                "broker": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.StandardInfraConfigSpecBroker"
                },
                "router": {
                    "$ref": "#/definitions/io.enmasse.admin.v1beta1.StandardInfraConfigSpecRouter"
                }
            }
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfigSpecAdmin": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "object",
                    "properties": {
                        "memory": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfigSpecBroker": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "object",
                    "properties": {
                        "memory": {
                            "type": "string"
                        },
                        "storage": {
                            "type": "string"
                        }
                    }
                },
                "addressFullPolicy": {
                    "type": "string",
                    "enum": [
                        "PAGE",
                        "BLOCK",
                        "FAIL"
                    ]
                },
                "storageClassName": {
                    "type": "string"
                },
                "updatePersistentVolumeClaim": {
                    "type": "boolean"
                }
            }
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfigSpecRouter": {
            "type": "object",
            "properties": {
                "resources": {
                    "type": "object",
                    "properties": {
                        "memory": {
                            "type": "string"
                        }
                    }
                },
                "minReplicas": {
                    "type": "integer"
                },
                "linkCapacity": {
                    "type": "integer"
                }
            }
        },
        "io.enmasse.admin.v1beta1.StandardInfraConfigList": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "StandardInfraConfigList"
                    ]
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.admin.v1beta1.StandardInfraConfig"
                    }
                }
            }
        },
        "io.enmasse.admin.v1beta1.AddressSpacePlan": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "displayName",
                "displayOrder",
                "shortDescription",
                "uuid",
                "addressSpaceType",
                "resources"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "AddressSpacePlan"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "displayName": {
                    "type": "string"
                },
                "displayOrder": {
                    "type": "integer"
                },
                "shortDescription": {
                    "type": "string"
                },
                "longDescription": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "addressSpaceType": {
                    "type": "string"
                },
                "resources": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "max"
                        ],
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "max": {
                                "type": "number"
                            }
                        }
                    }
                },
                "addressPlans": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "io.enmasse.admin.v1beta1.AddressSpacePlanList": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "AddressSpacePlanList"
                    ]
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.admin.v1beta1.AddressSpacePlan"
                    }
                }
            }
        },
        "io.enmasse.admin.v1beta1.AddressPlan": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "metadata",
                "displayName",
                "displayOrder",
                "shortDescription",
                "uuid",
                "addressType",
                "requiredResources"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "AddressPlan"
                    ]
                },
                "metadata": {
                    "$ref": "#/definitions/ObjectMeta"
                },
                "displayName": {
                    "type": "string"
                },
                "displayOrder": {
                    "type": "integer"
                },
                "shortDescription": {
                    "type": "string"
                },
                "longDescription": {
                    "type": "string"
                },
                "uuid": {
                    "type": "string"
                },
                "addressType": {
                    "type": "string"
                },
                "requiredResources": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "name",
                            "credit"
                        ],
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "credit": {
                                "type": "number"
                            }
                        }
                    }
                }
            }
        },
        "io.enmasse.admin.v1beta1.AddressPlanList": {
            "type": "object",
            "required": [
                "apiVersion",
                "kind",
                "items"
            ],
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "enum": [
                        "admin.enmasse.io/v1beta1"
                    ]
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "AddressPlanList"
                    ]
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.enmasse.admin.v1beta1.AddressPlan"
                    }
                }
            }
        },
        "io.k8s.api.networking.v1.NetworkPolicyIngressRule": {
            "description": "NetworkPolicyIngressRule describes a particular set of traffic that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and from.",
            "properties": {
                "from": {
                    "description": "List of sources which should be able to access the pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all sources (traffic not restricted by source). If this field is present and contains at least on item, this rule allows traffic only if the traffic matches at least one item in the from list.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
                    }
                },
                "ports": {
                    "description": "List of ports which should be made accessible on the pods selected for this rule. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
                    }
                }
            }
        },
        "io.k8s.api.networking.v1.NetworkPolicyEgressRule": {
            "description": "NetworkPolicyEgressRule describes a particular set of traffic that is allowed out of pods matched by a NetworkPolicySpec's podSelector. The traffic must match both ports and to. This type is beta-level in 1.8",
            "properties": {
                "ports": {
                    "description": "List of destination ports for outgoing traffic. Each item in this list is combined using a logical OR. If this field is empty or missing, this rule matches all ports (traffic not restricted by port). If this field is present and contains at least one item, then this rule allows traffic only if the traffic matches at least one port in the list.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPort"
                    }
                },
                "to": {
                    "description": "List of destinations for outgoing traffic of pods selected for this rule. Items in this list are combined using a logical OR operation. If this field is empty or missing, this rule matches all destinations (traffic not restricted by destination). If this field is present and contains at least one item, this rule allows traffic only if the traffic matches at least one item in the to list.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.api.networking.v1.NetworkPolicyPeer"
                    }
                }
            }
        },
        "io.k8s.api.networking.v1.NetworkPolicyPort": {
            "description": "NetworkPolicyPort describes a port to allow traffic on",
            "properties": {
                "port": {
                    "description": "The port on the given protocol. This can either be a numerical or named port on a pod. If this field is not provided, this matches all port names and numbers.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.util.intstr.IntOrString"
                },
                "protocol": {
                    "description": "The protocol (TCP or UDP) which traffic must match. If not specified, this field defaults to TCP.",
                    "type": "string"
                }
            }
        },
        "io.k8s.apimachinery.pkg.util.intstr.IntOrString": {
            "description": "IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.",
            "type": "string",
            "format": "int-or-string"
        },
        "io.k8s.api.networking.v1.NetworkPolicyPeer": {
            "description": "NetworkPolicyPeer describes a peer to allow traffic from. Only certain combinations of fields are allowed",
            "properties": {
                "ipBlock": {
                    "description": "IPBlock defines policy on a particular IPBlock. If this field is set then neither of the other fields can be.",
                    "$ref": "#/definitions/io.k8s.api.networking.v1.IPBlock"
                },
                "namespaceSelector": {
                    "description": "Selects Namespaces using cluster-scoped labels. This field follows standard label selector semantics; if present but empty, it selects all namespaces.\n\nIf PodSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects all Pods in the Namespaces selected by NamespaceSelector.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                },
                "podSelector": {
                    "description": "This is a label selector which selects Pods. This field follows standard label selector semantics; if present but empty, it selects all pods.\n\nIf NamespaceSelector is also set, then the NetworkPolicyPeer as a whole selects the Pods matching PodSelector in the Namespaces selected by NamespaceSelector. Otherwise it selects the Pods matching PodSelector in the policy's own Namespace.",
                    "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector"
                }
            }
        },
        "io.k8s.api.networking.v1.IPBlock": {
            "description": "IPBlock describes a particular CIDR (Ex. \"192.168.1.1/24\") that is allowed to the pods matched by a NetworkPolicySpec's podSelector. The except entry describes CIDRs that should not be included within this rule.",
            "required": [
                "cidr"
            ],
            "properties": {
                "cidr": {
                    "description": "CIDR is a string representing the IP Block Valid examples are \"192.168.1.1/24\"",
                    "type": "string"
                },
                "except": {
                    "description": "Except is a slice of CIDRs that should not be included within an IP Block Valid examples are \"192.168.1.1/24\" Except values will be rejected if they are outside the CIDR range",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelector": {
            "description": "A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.",
            "properties": {
                "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement"
                    }
                },
                "matchLabels": {
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                }
            }
        },
        "io.k8s.apimachinery.pkg.apis.meta.v1.LabelSelectorRequirement": {
            "description": "A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.",
            "required": [
                "key",
                "operator"
            ],
            "properties": {
                "key": {
                    "description": "key is the label key that the selector applies to.",
                    "type": "string",
                    "x-kubernetes-patch-merge-key": "key",
                    "x-kubernetes-patch-strategy": "merge"
                },
                "operator": {
                    "description": "operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.",
                    "type": "string"
                },
                "values": {
                    "description": "values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about EnMasse",
        "url": "http://enmasse.io"
    }
}
